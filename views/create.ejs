<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Create a post - <%=data.siteName%></title>
        <link rel="stylesheet" href="/css/styles.css">
        <link rel="stylesheet" href="/css/single.css">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    </head>
    <body>
        <!--header from partials-->
        <%- include('partials/header') %>
        <!--header from partials-->

        <div class="content">
            <div class="content-side left">
                <h1>Publish a recipe</h1>
                <% if (typeof formerror !== 'undefined' && formerror) { %>
                    <% for(let item of formerror){ %>
                        <h2 class="error"><%= item %></h2>
                <% }} else{formerror = false} %>

                <form class="fields" id="recipeForm" method="post" action="/create/post">
                    <span>Title* </span>
                    <input id="title" name="title" type="text" spellcheck="true" required placeholder="A simple title" <%if(formerror){%>value="<%=username%>"<%}%>>
                    <span id="usernameAvailability"></span>
                
                    <span>Description*</span>
                    <input id="description" name="description" type="text" spellcheck="true" required placeholder="A brief description" <%if(formerror){%>value="<%=email%>"<%}%>>
                
                    <span>Ingredients and amounts* </span>
                    <div class="ingredient-manager" id="ingredientManager">
                        <div class="ingredient-add">
                            <input type="text" class="ingredient" placeholder="what's it called?" required>
                            <input type="text" class="quantity" placeholder="how much?" required>
                            <button style="visibility: hidden;"> </button>
                        </div>
                    </div>
                    <button type="button" id="addIngredient">ï¼‹ Add</button>

                    <span>Instructions*</span>
                    <textarea id="instructions" name="instructions" type="text" spellcheck="true" required placeholder="Detailed instructions" <%if(formerror){%>value="<%=email%>"<%}%>></textarea>

                    <span>Tags</span>
                    <input id="tags" name="tags" type="text" placeholder="optional tags, separated by commas" required>
                    <button id="submit" type="submit">Post recipe</button>
                </form>
            </div>
            <div class="content-side right">
                <h2>Preview</h2>

                <div class="full-post">
                    <div class="post-div">
                        <div class="post">
                            <span id="tags-display"></span>
                            <div class="details">
                                <div class="timestamp"><%=new Date(Date.now()).toLocaleString()%></div>
                                <div class="username">by: you</div>
                            </div>
                            <div class="title">
                                <h2>A simple title</h2>
                            </div>
                            <div class="description">
                                <h3>A brief description</h3>
                            </div>
                            <div class="body">
                                <div class="ingredients">
                                    <h4>Ingredients:</h4>
                                    All the ingredients needed
                                </div>
                                <div class="instructions">
                                    <h4>Instructions:</h4>
                                    Detailed instructions
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
    <script>
        function updatePreview() {
            //grab input values
            const titleValue = document.getElementById("title").value;
            const descriptionValue = document.getElementById("description").value;
            const instructionsValue = document.getElementById("instructions").value;
            const tagValues = document.getElementById("tags").value || "";

            //replace line breaks with <br> tags for textarea content
            const formatText = (text) => text.replace(/\n/g, "<br>");

            //update the corresponding preview elements
            document.querySelector(".post .title h2").textContent = titleValue || "A simple title";
            document.querySelector(".post .description h3").textContent = descriptionValue || "A brief description";
            document.querySelector(".post .instructions").innerHTML = "<h4>Instructions:</h4>"+formatText(instructionsValue) || "<h4>Instructions:</h4>Detailed instructions";
            document.querySelector("#tags-display").innerHTML = ""
            for(let tag of tagValues.split(",")){
                document.querySelector("#tags-display").innerHTML += `<span class="tag">${tag.trim()}</span>`
            }

        }

        const textareaList = document.querySelectorAll('textarea');

        textareaList.forEach(textarea => {
            textarea.addEventListener('input', () => {
                textarea.style.height = 'auto';
                textarea.style.height = `${textarea.scrollHeight}px`;
            });
        });

        document.getElementById("title").addEventListener("input", updatePreview);
        document.getElementById("description").addEventListener("input", updatePreview);
        document.getElementById("instructions").addEventListener("input", updatePreview);
        document.getElementById("tags").addEventListener("input", updatePreview);

        //function to update the ingredient JSON and display it
        function updateIngredients() {
            const ingredientsJson = [];
            const ingredientAdds = document.querySelectorAll('.ingredient-add');

            ingredientAdds.forEach(add => {
                const ingredientInput = add.querySelector('.ingredient');
                const quantityInput = add.querySelector('.quantity');

                //only push valid entries
                if (ingredientInput.value.trim() && quantityInput.value.trim()) {
                    ingredientsJson.push({
                        ingredient: ingredientInput.value.trim(),
                        quantity: quantityInput.value.trim()
                    });
                }
            });

            //update the ingredients display
            const ingredientsDisplay = document.querySelector('.ingredients');
            ingredientsDisplay.innerHTML = '<h4>Ingredients:</h4>'; //clear previous display

            ingredientsJson.forEach(item => {
                const ingredientDiv = document.createElement('div');
                ingredientDiv.className = 'ingredient';
                ingredientDiv.textContent = `${item.ingredient}, ${item.quantity}`;
                ingredientsDisplay.appendChild(ingredientDiv);
            });
        }

        //function to validate input fields
        function validateInput(input) {
            const regex = /^[a-zA-Z0-9\s]+$/; //allow alphanumeric and spaces
            if (!regex.test(input.value)) {
                input.classList.add('invalid');
                return false;
            } else {
                input.classList.remove('invalid');
                return true;
            }
        }

        //function to create a new ingredient add div
        function createIngredientAdd() {
            const ingredientAddDiv = document.createElement('div');
            ingredientAddDiv.className = 'ingredient-add';

            const ingredientInput = document.createElement('input');
            ingredientInput.type = 'text';
            ingredientInput.className = 'ingredient';
            ingredientInput.placeholder = "what's it called?";
            ingredientInput.required = true;

            const quantityInput = document.createElement('input');
            quantityInput.type = 'text';
            quantityInput.className = 'quantity';
            quantityInput.placeholder = "how much?";
            quantityInput.required = true;

            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.className = 'removeIngredient';
            removeButton.innerText = 'x';

            //remove ingredient add div on button click
            removeButton.addEventListener('click', () => {
                ingredientAddDiv.remove();
                updateIngredients(); //update the ingredient display after removal
            });

            ingredientInput.addEventListener('input', updateIngredients);
            quantityInput.addEventListener('input', updateIngredients);

            ingredientAddDiv.appendChild(ingredientInput);
            ingredientAddDiv.appendChild(quantityInput);
            ingredientAddDiv.appendChild(removeButton);

            document.getElementById('ingredientManager').appendChild(ingredientAddDiv);
        }

        //add new ingredient add div
        document.getElementById('addIngredient').addEventListener('click', createIngredientAdd);

        //initial input listeners for the first ingredient pair
        document.querySelectorAll('.ingredient-add input').forEach(input => {
            input.addEventListener('input', updateIngredients);
        });

        //validate inputs and create JSON on form submit
        document.getElementById('recipeForm').addEventListener('submit', async function(event) {
            event.preventDefault(); //prevent default form submission

            let errors = document.querySelectorAll(".error");
            for(let error of errors){
                error.remove();
            }

            const ingredientsJson = [];
            const ingredientAdds = document.querySelectorAll('.ingredient-add');

            let validForm = true; //flag to check overall form validity

            let tagValues = document.getElementById("tags").value.split(",");
            let tags = [];
            tagValues.forEach((tag, tagIndex) =>{
                //remove any empty values
                if(tag == ""){
                    tagValues.splice(tagIndex, 1);
                }
                else{
                    if(/^[a-zA-Z0-9\s]+$/.test(tag)){
                        tag = tag.toLocaleLowerCase().trim();
                        tags.push(tag);
                    }
                    else{
                        document.getElementById("tags").previousElementSibling.insertAdjacentHTML("afterend", `<h2 id='tagError' class="error">Tag value '${tag}' is invalid. Please ensure tags are alphanumeric and separated by commas.</h2>`);
                        document.getElementById("tags").classList.add("invalid")
                        validForm = false;
                        return;
                    }
                }
            })
            if(tags.length == 0){
                document.getElementById("tags").classList.add("invalid")
                validForm == false;
            }
            else{
                document.getElementById("tags").classList.remove("invalid")
            }

            ingredientAdds.forEach(add => {
                const ingredientInput = add.querySelector('.ingredient');
                const quantityInput = add.querySelector('.quantity');

                //validate both fields
                const ingredientValid = validateInput(ingredientInput);
                const quantityValid = validateInput(quantityInput);
                console.log(ingredientValid)
                console.log(quantityValid)
                validForm = validForm && ingredientValid && quantityValid;

                if (ingredientValid && quantityValid) {
                    ingredientsJson.push({
                        name: ingredientInput.value.trim(),
                        quantity: quantityInput.value.trim()
                    });
                }
            });

            if (!validForm) {
                //alert('Please correct the invalid fields.');
                document.getElementById('submit').insertAdjacentHTML("afterend", `<h2 class="error">Entered details contain errors. Please correct them and try again.</h2>`);
                return;
            }

            console.log('Ingredients JSON:', JSON.stringify(ingredientsJson)); //log JSON for verification

            const data = {
                title: document.getElementById("title").value,
                description: document.getElementById("description").value,
                instructions: document.getElementById("instructions").value,
                ingredients: ingredientsJson,
                tags:tags,
                csrfToken: "<%=csrfToken%>"
            }

            console.log(data)

            try {
                //send a POST request to the server
                let result = await fetch('<%=(baseUrl||"")%>/create/post', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (result.ok) {
                    if (result.redirected) {
                        window.location.href = result.url;
                    }
                } else {
                    result = await result.json();
                    if(result.errors){
                        result.message = result.errors.map(error => error.msg).join("<br>");
                    }
                    alert('Error submitting recipe: ' + (result.message || 'Unknown error'));
                }
            } catch (err) {
                console.error('Error making POST request:', err);
                alert('An error occurred while submitting the recipe. Please try again later.');
            }
        });
    </script>
</html>
